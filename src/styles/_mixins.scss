@import 'variables';

// Mixins for responsive design and common patterns

// Mobile-first responsive mixins with improved breakpoint system
@mixin mobile-xs {
  @media (max-width: #{map-get($breakpoints, mobile) - 1px}) {
    @content;
  }
}

@mixin mobile {
  @media (min-width: #{map-get($breakpoints, mobile)}) and (max-width: #{map-get($breakpoints, tablet) - 1px}) {
    @content;
  }
}

@mixin mobile-up {
  @media (min-width: #{map-get($breakpoints, mobile)}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{map-get($breakpoints, tablet)}) and (max-width: #{map-get($breakpoints, desktop) - 1px}) {
    @content;
  }
}

@mixin tablet-up {
  @media (min-width: #{map-get($breakpoints, tablet)}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{map-get($breakpoints, desktop)}) and (max-width: #{map-get($breakpoints, large) - 1px}) {
    @content;
  }
}

@mixin desktop-up {
  @media (min-width: #{map-get($breakpoints, desktop)}) {
    @content;
  }
}

@mixin large {
  @media (min-width: #{map-get($breakpoints, large)}) {
    @content;
  }
}

// Touch and pointer interaction mixins
@mixin touch-device {
  @media (hover: none) and (pointer: coarse) {
    @content;
  }
}

@mixin hover-device {
  @media (hover: hover) and (pointer: fine) {
    @content;
  }
}

@mixin touch-target {
  min-height: 44px;
  min-width: 44px;
  padding: 0.75rem;
  
  @include touch-device {
    min-height: 48px;
    min-width: 48px;
    padding: 0.875rem;
  }
}

@mixin touch-feedback {
  position: relative;
  overflow: hidden;
  
  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.3);
    transform: translate(-50%, -50%);
    transition: width 0.3s ease, height 0.3s ease;
    pointer-events: none;
  }
  
  @include touch-device {
    &:active::after {
      width: 200px;
      height: 200px;
    }
  }
}

// Orientation mixins
@mixin portrait {
  @media (orientation: portrait) {
    @content;
  }
}

@mixin landscape {
  @media (orientation: landscape) {
    @content;
  }
}

@mixin landscape-mobile {
  @media (orientation: landscape) and (max-height: 600px) {
    @content;
  }
}

// Animation mixins
@mixin transition($properties: all, $duration: 0.2s, $timing: ease) {
  transition: $properties $duration $timing;
}

@mixin hover-lift {
  @include transition(transform, 0.2s, ease);
  
  // Only apply hover effects on devices that support hover
  @include hover-device {
    &:hover {
      transform: translateY(-1px);
    }
  }
  
  &:active {
    transform: translateY(0);
  }
}

@mixin button-focus {
  &:focus-visible {
    outline: 2px solid var(--accent-color);
    outline-offset: 2px;
  }
}

// Layout mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin aspect-ratio($width, $height) {
  aspect-ratio: #{$width}/#{$height};
}

// Text mixins
@mixin text-truncate {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin text-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Component mixins
@mixin card-shadow {
  box-shadow: var(--shadow-md);
  
  &:hover {
    box-shadow: var(--shadow-lg);
  }
}

@mixin input-style {
  padding: var(--spacing-sm) var(--spacing-md);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-md);
  background: var(--bg-primary);
  color: var(--text-primary);
  font-family: var(--font-family-base);
  
  &:focus {
    outline: none;
    border-color: var(--accent-color);
    box-shadow: 0 0 0 2px rgba(var(--accent-rgb), 0.2);
  }
  
  &::placeholder {
    color: var(--text-tertiary);
  }
}

@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-sm) var(--spacing-md);
  border: none;
  border-radius: var(--radius-md);
  font-family: var(--font-family-base);
  font-weight: var(--font-weight-medium);
  cursor: pointer;
  @include transition();
  @include button-focus();
  @include touch-target();
  
  &:disabled {
    cursor: not-allowed;
    opacity: 0.6;
  }
  
  // Enhanced touch interaction
  @include touch-device {
    @include touch-feedback();
  }
  
  // Hover effects only on hover-capable devices
  @include hover-device {
    &:hover:not(:disabled) {
      @include hover-lift();
    }
  }
}

@mixin button-primary {
  @include button-base();
  background: var(--accent-color);
  color: white;
  
  &:hover:not(:disabled) {
    background: var(--accent-hover);
  }
}

@mixin button-secondary {
  @include button-base();
  background: var(--bg-secondary);
  color: var(--text-primary);
  border: 1px solid var(--border-color);
  
  &:hover:not(:disabled) {
    background: var(--bg-tertiary);
    border-color: var(--border-hover);
  }
}

// Loading animations
@mixin loading-shimmer {
  background: linear-gradient(
    90deg,
    var(--bg-tertiary) 25%,
    var(--bg-quaternary) 50%,
    var(--bg-tertiary) 75%
  );
  background-size: 200% 100%;
  animation: loading-shimmer 1.5s infinite;
}

@keyframes loading-shimmer {
  0% { background-position: -200% 0; }
  100% { background-position: 200% 0; }
}

// Utility mixins
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}